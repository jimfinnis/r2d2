# start a new synth
newsynth foo

# create a sin osc called sin1 with the default params

g sin       sin1

# create a sin osc called sin2 with a freq mult of 1.01. The "p" keyword
# sets parameters in the current synth, which are key-value pairs
# separated by commas and terminated with a semicolon: "k1 v1, k2 v2;".
# There's only one here, and it's the last thing on the line so we
# don't need the terminator (that's only necessary if we have another
# command on the same line).

g sin       sin2        p freq 1.01

# create an env generator called env1, and make it a "done monitor" - the
# sound is finished when all donemons are complete.
# Envs use a special syntax without the "g" keyword, but their params
# can still be modified with "p" etc. Note that "done" is a separate command,
# which makes the current generator a donemon.

env         env1        0 0, 0.01 1, 0.7 0;         done

# create a mixer called "mix" and make it the output, and set the
# amplitudes of its outputs to 0.5

g mix2      mix         p ampa 0.5,ampb 0.5;        out

# link env1 to the amp input of sin1

env1 ->     sin1:amp

# link env1 to the amp input of sin2

env1 ->     sin2:amp

# link the sine oscillators to the mixer

sin1 ->     mix:a
sin2 ->     mix:b

# play a note
+ 440;


# this creates a new synth, but here we have no comments and
# we've compressed stuff.

newsynth bar
g sin sin1 p pm 19,amp 0.1; out
g sin sin2 p freq 1.7 # phase modulator
sin2->sin1:pm
env e 0 0, 0.01 1, 0.08 0.7, 0.1 0; done
e -> sin1:amp
env emod 0 0, 0.02 1, 0.07 0.2, 0.08 0.01, 0.1 0;
emod -> sin2:amp

# selects it and plays notes on it

s bar +743,300,873,674,384,500

# this demonstrates how to modify a synthdef with "m"
# Change the sin1 PM and amp values:
#   m sin1 p pm 20,amp 0.1;
# Change the time of the final stage of the envelope:
#   m e p t3 0.2;

